<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace SwaggerClient\models;

use \ArrayAccess;

class Connector implements ArrayAccess {
  static $swaggerTypes = array(
      'id' => 'int',
      'name' => 'string',
      'display_name' => 'string',
      'image' => 'string',
      'get_it_url' => 'string',
      'connected' => 'string',
      'connect_instructions' => 'string',
      'last_update' => 'int',
      'latest_data' => 'int',
      'no_data_yet' => 'boolean'
  );

  static $attributeMap = array(
      'id' => 'id',
      'name' => 'name',
      'display_name' => 'displayName',
      'image' => 'image',
      'get_it_url' => 'getItUrl',
      'connected' => 'connected',
      'connect_instructions' => 'connectInstructions',
      'last_update' => 'lastUpdate',
      'latest_data' => 'latestData',
      'no_data_yet' => 'noDataYet'
  );

  
  /**
  * Connector ID number
  */
  public $id; /* int */
  /**
  * Connector lowercase system name
  */
  public $name; /* string */
  /**
  * Connector pretty display name
  */
  public $display_name; /* string */
  /**
  * URL to the image of the connector logo
  */
  public $image; /* string */
  /**
  * URL to a site where one can get this device or application
  */
  public $get_it_url; /* string */
  /**
  * True if the authenticated user has this connector enabled
  */
  public $connected; /* string */
  /**
  * URL and parameters used when connecting to a service
  */
  public $connect_instructions; /* string */
  /**
  * Epoch timestamp of last sync
  */
  public $last_update; /* int */
  /**
  * Number of measurements obtained during latest update
  */
  public $latest_data; /* int */
  /**
  * True if user has no measurements for this connector
  */
  public $no_data_yet; /* boolean */

  public function __construct(array $data = null) {
    $this->id = $data["id"];
    $this->name = $data["name"];
    $this->display_name = $data["display_name"];
    $this->image = $data["image"];
    $this->get_it_url = $data["get_it_url"];
    $this->connected = $data["connected"];
    $this->connect_instructions = $data["connect_instructions"];
    $this->last_update = $data["last_update"];
    $this->latest_data = $data["latest_data"];
    $this->no_data_yet = $data["no_data_yet"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
