<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace SwaggerClient\models;

use \ArrayAccess;

class User implements ArrayAccess {
  static $swaggerTypes = array(
      'id' => 'int',
      'wp_id' => 'int',
      'display_name' => 'string',
      'login_name' => 'string',
      'email' => 'string',
      'token' => 'string',
      'administrator' => 'boolean'
  );

  static $attributeMap = array(
      'id' => 'id',
      'wp_id' => 'wpId',
      'display_name' => 'displayName',
      'login_name' => 'loginName',
      'email' => 'email',
      'token' => 'token',
      'administrator' => 'administrator'
  );

  
  /**
  * User id
  */
  public $id; /* int */
  /**
  * Wordpress user id
  */
  public $wp_id; /* int */
  /**
  * User display name
  */
  public $display_name; /* string */
  /**
  * User login name
  */
  public $login_name; /* string */
  /**
  * User email
  */
  public $email; /* string */
  /**
  * User token
  */
  public $token; /* string */
  /**
  * Is user administrator
  */
  public $administrator; /* boolean */

  public function __construct(array $data = null) {
    $this->id = $data["id"];
    $this->wp_id = $data["wp_id"];
    $this->display_name = $data["display_name"];
    $this->login_name = $data["login_name"];
    $this->email = $data["email"];
    $this->token = $data["token"];
    $this->administrator = $data["administrator"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
