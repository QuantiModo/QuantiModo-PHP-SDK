<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 */
class CorrelationsApi {

	function __construct($apiClient) {
	  $this->apiClient = $apiClient;
	}

  
	/**
	 * correlationsGet
   *
	 * Get correlations
   * effect, string: ORIGINAL variable name of the effect variable for which the user desires correlations (required)
   * * cause, string: ORIGINAL variable name of the cause variable for which the user desires correlations (required)
   * 
	 * @return array[Correlation]
	 */

   public function correlationsGet($effect, $cause) {

  		// parse inputs
  		$resourcePath = "/correlations";
  		$resourcePath = str_replace("{format}", "json", $resourcePath);
  		$method = "GET";
      $queryParams = array();
      $headerParams = array();
      $formParams = array();
      $headerParams['Accept'] = 'application/json';
      $headerParams['Content-Type'] = '';

      // query params
      if($effect !== null) {
  		  $queryParams['effect'] = $this->apiClient->toQueryValue($effect);
  		}// query params
      if($cause !== null) {
  		  $queryParams['cause'] = $this->apiClient->toQueryValue($cause);
  		}
      
      
      
      

      $body = $body ?: $formParams;

      if (strpos($headerParams['Content-Type'], "application/x-www-form-urlencoded") > -1) {
        $body = http_build_query($body);
      }

  		// make the API Call
  		$response = $this->apiClient->callAPI($resourcePath, $method,
  		                                      $queryParams, $body,
  		                                      $headerParams);

      if(! $response) {
        return null;
      }

  		$responseObject = $this->apiClient->deserialize($response,
  		                                                'array[Correlation]');
  		return $responseObject;
  }
  
	/**
	 * publicCorrelationsSearchSearchGet
   *
	 * Get average correlations for variables containing search term
   * search, string: Search query (required)
   * * effectOrCause, string: Specifies whehter to return the effects or causes of the searched variable. (required)
   * 
	 * @return array[Correlation]
	 */

   public function publicCorrelationsSearchSearchGet($search, $effectOrCause) {

  		// parse inputs
  		$resourcePath = "/public/correlations/search/{search}";
  		$resourcePath = str_replace("{format}", "json", $resourcePath);
  		$method = "GET";
      $queryParams = array();
      $headerParams = array();
      $formParams = array();
      $headerParams['Accept'] = 'application/json';
      $headerParams['Content-Type'] = '';

      // query params
      if($effectOrCause !== null) {
  		  $queryParams['effectOrCause'] = $this->apiClient->toQueryValue($effectOrCause);
  		}
      
      // path params
      if($search !== null) {
  			$resourcePath = str_replace("{" . "search" . "}",
  			                            $this->apiClient->toPathValue($search), $resourcePath);
  		}
      
      

      $body = $body ?: $formParams;

      if (strpos($headerParams['Content-Type'], "application/x-www-form-urlencoded") > -1) {
        $body = http_build_query($body);
      }

  		// make the API Call
  		$response = $this->apiClient->callAPI($resourcePath, $method,
  		                                      $queryParams, $body,
  		                                      $headerParams);

      if(! $response) {
        return null;
      }

  		$responseObject = $this->apiClient->deserialize($response,
  		                                                'array[Correlation]');
  		return $responseObject;
  }
  

}
