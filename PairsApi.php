<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 */
class PairsApi {

	function __construct($apiClient) {
	  $this->apiClient = $apiClient;
	}

  
	/**
	 * pairsGet
   *
	 * Get pairs
   * cause, string: Original variable name for the explanatory or independent variable (required)
   * * effect, string: Original variable name for the outcome or dependent variable (required)
   * * duration, string: Duration of action (in seconds) from the cause variable settings. (required)
   * * delay, string: Delay before onset of action (in seconds) from the cause variable settings. (required)
   * * startTime, string: The earliest date (in epoch time) for which we should return measurements (required)
   * * endTime, string: The most recent date (in epoch time) for which we should return measurements (required)
   * * causeSource, string: Name of data source that the cause measurements should come from (required)
   * * effectSource, string: Name of data source that the effectmeasurements should come from (required)
   * * causeUnit, string: Abbreviated name for the unit cause measurements to be returned in (required)
   * * effectUnit, string: Abbreviated name for the unit effect measurements to be returned in (required)
   * 
	 * @return 
	 */

   public function pairsGet($cause, $effect, $duration, $delay, $startTime, $endTime, $causeSource, $effectSource, $causeUnit, $effectUnit) {

  		// parse inputs
  		$resourcePath = "/pairs";
  		$resourcePath = str_replace("{format}", "json", $resourcePath);
  		$method = "GET";
      $queryParams = array();
      $headerParams = array();
      $formParams = array();
      $headerParams['Accept'] = 'application/json';
      $headerParams['Content-Type'] = '';

      // query params
      if($cause !== null) {
  		  $queryParams['cause'] = $this->apiClient->toQueryValue($cause);
  		}// query params
      if($effect !== null) {
  		  $queryParams['effect'] = $this->apiClient->toQueryValue($effect);
  		}// query params
      if($duration !== null) {
  		  $queryParams['duration'] = $this->apiClient->toQueryValue($duration);
  		}// query params
      if($delay !== null) {
  		  $queryParams['delay'] = $this->apiClient->toQueryValue($delay);
  		}// query params
      if($startTime !== null) {
  		  $queryParams['startTime'] = $this->apiClient->toQueryValue($startTime);
  		}// query params
      if($endTime !== null) {
  		  $queryParams['endTime'] = $this->apiClient->toQueryValue($endTime);
  		}// query params
      if($causeSource !== null) {
  		  $queryParams['causeSource'] = $this->apiClient->toQueryValue($causeSource);
  		}// query params
      if($effectSource !== null) {
  		  $queryParams['effectSource'] = $this->apiClient->toQueryValue($effectSource);
  		}// query params
      if($causeUnit !== null) {
  		  $queryParams['causeUnit'] = $this->apiClient->toQueryValue($causeUnit);
  		}// query params
      if($effectUnit !== null) {
  		  $queryParams['effectUnit'] = $this->apiClient->toQueryValue($effectUnit);
  		}
      
      
      
      

      $body = $body ?: $formParams;

      if (strpos($headerParams['Content-Type'], "application/x-www-form-urlencoded") > -1) {
        $body = http_build_query($body);
      }

  		// make the API Call
  		$response = $this->apiClient->callAPI($resourcePath, $method,
  		                                      $queryParams, $body,
  		                                      $headerParams);

      
  }
  

}
