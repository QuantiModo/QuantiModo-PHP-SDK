<?php
/**
 * ButtonTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  QuantiModo\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * quantimodo
 *
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 5.8.112511
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace QuantiModo\Client;

/**
 * ButtonTest Class Doc Comment
 *
 * @category    Class */
// * @description Button
/**
 * @package     QuantiModo\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ButtonTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Button"
     */
    public function testButton()
    {
    }

    /**
     * Test attribute "accessibility_text"
     */
    public function testPropertyAccessibilityText()
    {
    }

    /**
     * Test attribute "action"
     */
    public function testPropertyAction()
    {
    }

    /**
     * Test attribute "additional_information"
     */
    public function testPropertyAdditionalInformation()
    {
    }

    /**
     * Test attribute "color"
     */
    public function testPropertyColor()
    {
    }

    /**
     * Test attribute "confirmation_text"
     */
    public function testPropertyConfirmationText()
    {
    }

    /**
     * Test attribute "function_name"
     */
    public function testPropertyFunctionName()
    {
    }

    /**
     * Test attribute "parameters"
     */
    public function testPropertyParameters()
    {
    }

    /**
     * Test attribute "html"
     */
    public function testPropertyHtml()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "image"
     */
    public function testPropertyImage()
    {
    }

    /**
     * Test attribute "ion_icon"
     */
    public function testPropertyIonIcon()
    {
    }

    /**
     * Test attribute "link"
     */
    public function testPropertyLink()
    {
    }

    /**
     * Test attribute "state_name"
     */
    public function testPropertyStateName()
    {
    }

    /**
     * Test attribute "state_params"
     */
    public function testPropertyStateParams()
    {
    }

    /**
     * Test attribute "success_toast_text"
     */
    public function testPropertySuccessToastText()
    {
    }

    /**
     * Test attribute "success_alert_title"
     */
    public function testPropertySuccessAlertTitle()
    {
    }

    /**
     * Test attribute "success_alert_body"
     */
    public function testPropertySuccessAlertBody()
    {
    }

    /**
     * Test attribute "text"
     */
    public function testPropertyText()
    {
    }

    /**
     * Test attribute "tooltip"
     */
    public function testPropertyTooltip()
    {
    }

    /**
     * Test attribute "webhook_url"
     */
    public function testPropertyWebhookUrl()
    {
    }
}
