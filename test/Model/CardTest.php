<?php
/**
 * CardTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  QuantiModo\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * quantimodo
 *
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * OpenAPI spec version: 5.8.112511
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace QuantiModo\Client;

/**
 * CardTest Class Doc Comment
 *
 * @category    Class
 * @description Card
 * @package     QuantiModo\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class CardTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Card"
     */
    public function testCard()
    {
    }

    /**
     * Test attribute "action_sheet_buttons"
     */
    public function testPropertyActionSheetButtons()
    {
    }

    /**
     * Test attribute "avatar"
     */
    public function testPropertyAvatar()
    {
    }

    /**
     * Test attribute "avatar_circular"
     */
    public function testPropertyAvatarCircular()
    {
    }

    /**
     * Test attribute "background_color"
     */
    public function testPropertyBackgroundColor()
    {
    }

    /**
     * Test attribute "buttons"
     */
    public function testPropertyButtons()
    {
    }

    /**
     * Test attribute "buttons_secondary"
     */
    public function testPropertyButtonsSecondary()
    {
    }

    /**
     * Test attribute "content"
     */
    public function testPropertyContent()
    {
    }

    /**
     * Test attribute "header_title"
     */
    public function testPropertyHeaderTitle()
    {
    }

    /**
     * Test attribute "html"
     */
    public function testPropertyHtml()
    {
    }

    /**
     * Test attribute "html_content"
     */
    public function testPropertyHtmlContent()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "image"
     */
    public function testPropertyImage()
    {
    }

    /**
     * Test attribute "input_fields"
     */
    public function testPropertyInputFields()
    {
    }

    /**
     * Test attribute "ion_icon"
     */
    public function testPropertyIonIcon()
    {
    }

    /**
     * Test attribute "link"
     */
    public function testPropertyLink()
    {
    }

    /**
     * Test attribute "parameters"
     */
    public function testPropertyParameters()
    {
    }

    /**
     * Test attribute "related_cards"
     */
    public function testPropertyRelatedCards()
    {
    }

    /**
     * Test attribute "selected_button"
     */
    public function testPropertySelectedButton()
    {
    }

    /**
     * Test attribute "sharing_body"
     */
    public function testPropertySharingBody()
    {
    }

    /**
     * Test attribute "sharing_buttons"
     */
    public function testPropertySharingButtons()
    {
    }

    /**
     * Test attribute "sharing_title"
     */
    public function testPropertySharingTitle()
    {
    }

    /**
     * Test attribute "sub_header"
     */
    public function testPropertySubHeader()
    {
    }

    /**
     * Test attribute "sub_title"
     */
    public function testPropertySubTitle()
    {
    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {
    }
}
